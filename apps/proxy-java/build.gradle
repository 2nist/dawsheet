/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    // Import the Google Cloud Libraries BOM to manage dependency versions
    implementation platform('com.google.cloud:libraries-bom:26.33.0')

    // Google Cloud Pub/Sub client library (version is managed by the BOM)
    implementation 'com.google.cloud:google-cloud-pubsub'

    // SLF4J for logging
    implementation 'org.slf4j:slf4j-api:2.0.7'
    runtimeOnly 'org.slf4j:slf4j-simple:2.0.7'

    // WebSocket server
    implementation 'org.java-websocket:Java-WebSocket:1.5.3'

    // JavaOSC for OSC communication (stubbed for now)
    implementation 'com.illposed.osc:javaosc-core:0.8'

    // JSON parsing
    implementation 'com.google.code.gson:gson:2.10.1'

    // JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    mainClass = 'io.dawsheet.App'
}

// Custom task to run the application and load environment variables from a .env file
task runWithEnv(type: JavaExec) {
    group = "application"
    description = "Runs the application with environment variables from .env file"
    
    mainClass = application.mainClass
    classpath = sourceSets.main.runtimeClasspath
    
    doFirst {
        def envFile = file(".env")
        if (envFile.exists()) {
            println "Loading environment variables from .env file"
            envFile.eachLine { line ->
                // Ignore comments and empty lines
                if (line.trim() && !line.startsWith('#')) {
                    if (line.contains('=')) {
                        def parts = line.split('=', 2)
                        def key = parts[0].trim()
                        def value = parts.length > 1 ? parts[1].trim() : ""
                        if (key) {
                            environment key, value
                        }
                    }
                }
            }
        } else {
            println "Warning: .env file not found. Relying on system environment variables."
        }
    }
}

// Make the default 'run' task depend on our custom runner
run.dependsOn(runWithEnv)
// Disable the standard run task to avoid confusion
tasks.named('run').configure {
    enabled = false
}
// Set our custom task as the one to run by default
defaultTasks 'runWithEnv'
